{"version":3,"sources":["components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactList","contacts","onRemoveContact","className","styles","TaskList","map","contact","TaskList_item","name","number","TaskList_button","type","onClick","id","Filter","value","onChangeFilter","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","TaskEditor_button","Component","App","filter","addContact","task","cont","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f8b32695.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={styles.TaskList}>\n    {contacts.map((contact) => (\n      <li className = {styles.TaskList_item}key={contact.id}>\n        {contact.name + \":\" + contact.number}\n        {\n          <button\n            className={styles.TaskList_button}\n            type=\"button\"\n            name=\"delte\"\n            onClick={() => onRemoveContact(contact.id)}\n          >\n            delete\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n  })),\n}\nexport default ContactList;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n       \n      />\n    </div>\n  );\n}\n\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onÐ¡hangeFilter: PropTypes.func.isRequired,\n};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\n        <label className={styles.TaskEditor_label}>\n          Name\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.TaskEditor_label}>\n          Number\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.TaskEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  // name: PropTypes.string.isRequired,\n  // number: PropTypes.string.isRequired,\n};","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__1j2US\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__1prCm\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__1hm-Z\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__3xqf-\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__4pklS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__3tEwg\",\"TaskList_item\":\"ContactList_TaskList_item__3HtBv\",\"completed\":\"ContactList_completed__2yjbM\",\"TaskList_text\":\"ContactList_TaskList_text__3TxWU\",\"TaskList_actions\":\"ContactList_TaskList_actions__3rtOl\",\"TaskList_button\":\"ContactList_TaskList_button__3dQKk\"};"],"sourceRoot":""}